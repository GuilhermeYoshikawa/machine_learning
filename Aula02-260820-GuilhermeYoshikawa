{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"Aula02-260820-GuilhermeYoshikawa","provenance":[],"collapsed_sections":[],"authorship_tag":"ABX9TyPltWG4zSymd0P7Hw35X8S3"},"kernelspec":{"name":"python3","display_name":"Python 3"}},"cells":[{"cell_type":"code","metadata":{"id":"XIZdl5ZX-CfI","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":185},"executionInfo":{"status":"ok","timestamp":1598570486560,"user_tz":180,"elapsed":1314,"user":{"displayName":"Guilherme Yoshikawa da Silva","photoUrl":"","userId":"09318662405963968460"}},"outputId":"8b29f1aa-4b9f-4e33-a763-3d499138e5ec"},"source":["x = 3\n","print(type(x))\n","# Mostra \"<class 'int'>\"\n","print(x)\n","# Mostra \"3\"\n","print(x + 1)\n","# Adiciona e mostra \"4\"\n","print(x - 1)\n","# Subtrai e mostra \"2\"\n","print(x * 2)\n","# Multiplica e mostra \"6\"\n","print(x ** 2)\n","# Faz a exponenciação e mostra \"9\"\n","x *= 1\n","print(x)\n","# Mostra \"4\"\n","x *= 2\n","print(x)\n","# Mostra \"8\"\n","y = 2.5\n","print(type(y))\n","# Mostra \"<class 'float'>\"\n","print(y, y + 1, y * 2, y ** 2)\n","# Mostra \"2.5 3.5 5.0 6.25\""],"execution_count":null,"outputs":[{"output_type":"stream","text":["<class 'int'>\n","3\n","4\n","2\n","6\n","9\n","3\n","6\n","<class 'float'>\n","2.5 3.5 5.0 6.25\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"Hm-4-kgQ_XHG","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":101},"executionInfo":{"status":"ok","timestamp":1598483848335,"user_tz":180,"elapsed":710,"user":{"displayName":"Guilherme Yoshikawa da Silva","photoUrl":"","userId":"09318662405963968460"}},"outputId":"8adff227-f345-4c83-c6a7-69321aba22ae"},"source":["t = True\n","f = False\n","print(type(t))\n","# Mostra \"<class 'bool'>\"\n","print(t and f)\n","# Trabalha o operador AND e mostra \"False\"\n","print(t or f)\n","# Trabalha o operador OR e mostra \"TRUE\"\n","print(not t)\n","# Trabalha o operador NOT e mostra \"False\"\n","print(t != f)\n","# Trabalha o operador XOR (ou exclusivo) e mostra \"TRUE\""],"execution_count":null,"outputs":[{"output_type":"stream","text":["<class 'bool'>\n","False\n","True\n","False\n","True\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"3Pzh2BKfD0dp","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":202},"executionInfo":{"status":"ok","timestamp":1598570696838,"user_tz":180,"elapsed":648,"user":{"displayName":"Guilherme Yoshikawa da Silva","photoUrl":"","userId":"09318662405963968460"}},"outputId":"73f801a4-dfe1-41bb-e77f-40e7da2a3a05"},"source":["hello = 'hello'\n","# String literais se usa aspa simples\n","world = \"world\"\n","# ou aspas duplas indiferentemente\n","print(hello)\n","# Mostra \"hello\"\n","print(len(hello))\n","# Identifica o tamanho da String e mostra \"5\"\n","hw = hello + ' ' + world\n","# Operador \"+\" concatena Strings\n","print(hw)\n","# Mostra \"hello world\"\n","hw12 = '%s %s %d' % (hello, world, 12)\n","# Formata como o printf da linguagem C\n","print(hw12)\n","# Mostra \"hello world 12\"\n","hw12 = '{} {} {}'.format(hello, world, 12)\n","print(hw12)\n","# Mostra \"hello world 12\"\n","s = \"hello\"\n","print(s.capitalize())\n","# Coloca em maiúsculo tudo e mostra \"Hello\"\n","print(s.upper())\n","# Coloca em maiúsculo tudo e mostra \"HELLO\"\n","print(s.rjust(7))\n","# Justifica à direita e mostra \"  hello\" \n","print(s.center(7))\n","# Centraliza e mostra \"hello\"\n","print(s.replace('1', '(e11)'))\n","# Troca todos 'l' por 'ell' e mostra \"he(ell) (ell)o\"\n","print(' world'.strip())\n","# Tira os espaços e mostra \"world\""],"execution_count":null,"outputs":[{"output_type":"stream","text":["hello\n","5\n","hello world\n","hello world 12\n","hello world 12\n","Hello\n","HELLO\n","  hello\n"," hello \n","hello\n","world\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"YDbQGeItKHyi","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":151},"executionInfo":{"status":"ok","timestamp":1598570885129,"user_tz":180,"elapsed":1179,"user":{"displayName":"Guilherme Yoshikawa da Silva","photoUrl":"","userId":"09318662405963968460"}},"outputId":"79877bf2-c482-4a7d-e4ac-661c74a5ec3a"},"source":["xs = [3, 1, 2, 'texto']\n","# Cria a lista\n","print(xs, xs[2])\n","# Mostra \"[3, 1, 2] 2\"\n","print(xs[-1])\n","# Indices negativos contam a partir do fim da lista e mostra \"2\"\n","xs[2] = 'texto'\n","# Listas podem ter elementos de tipos diferentes\n","print(xs)\n","# Mostra \"[3, 1, 'texto']\"\n","xs.append('outro')\n","# Coloca um novo elemento no fim da lista\n","print(xs)\n","# Mostra \"[3, 1, 'texto', 'outro']\"\n","x = xs.pop()\n","# Remove e retorna o ultimo elemento da lista\n","print(x, xs)\n","# Mostra \"bar [3, 1, 'texto']\"\n","animais = ['gato', 'cachorro', 'macaco']\n","# A seguir um Loop com a lista de animais\n","for animal in animais:\n","  print(animal)\n","# O recurso de Loop (repetição) acima conheceremos na próxima aula"],"execution_count":null,"outputs":[{"output_type":"stream","text":["[3, 1, 2, 'texto'] 2\n","texto\n","[3, 1, 'texto', 'texto']\n","[3, 1, 'texto', 'texto', 'outro']\n","outro [3, 1, 'texto', 'texto']\n","gato\n","cachorro\n","macaco\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"2S33cA73Phy2","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":168},"executionInfo":{"status":"ok","timestamp":1598571017054,"user_tz":180,"elapsed":690,"user":{"displayName":"Guilherme Yoshikawa da Silva","photoUrl":"","userId":"09318662405963968460"}},"outputId":"f506fc46-62ea-4dff-9644-b9cdbb07f4b1"},"source":["l1 = list(range(5))\n","print(l1)\n","l2 = list(range(3,8))\n","print(l2)\n","l3 = list(range(2,11,3))\n","print(l3)\n","l4 = l1 + l2\n","print(l4)\n","l5 = 13 * 4\n","print(l5)\n","l6 = [9 , 'texto', 5.7, [16, 11, 18], \"Python\", [7,8]]\n","print(l6)\n","l7 = l6[1:4]\n","print(l7)\n","l8 = l6[:2]\n","print(l8)\n","l9 = l6[:4]\n","print(l9)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["[0, 1, 2, 3, 4]\n","[3, 4, 5, 6, 7]\n","[2, 5, 8]\n","[0, 1, 2, 3, 4, 3, 4, 5, 6, 7]\n","52\n","[9, 'texto', 5.7, [16, 11, 18], 'Python', [7, 8]]\n","['texto', 5.7, [16, 11, 18]]\n","[9, 'texto']\n","[9, 'texto', 5.7, [16, 11, 18]]\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"CtNrN4_7RnXQ","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":134},"executionInfo":{"status":"ok","timestamp":1598487979955,"user_tz":180,"elapsed":626,"user":{"displayName":"Guilherme Yoshikawa da Silva","photoUrl":"","userId":"09318662405963968460"}},"outputId":"e2e14c26-0633-4e35-a052-b3640c70ce52"},"source":["Precos = {'lapis': 5.5, 'borracha': 7.0, 'caneta': 6.5}\n","print(Precos)\n","print(\"O preço da borracha eh:\", Precos ['borracha'])\n","print(Precos.keys())\n","print(Precos.values())\n","print('caneta' in Precos)\n","print('caderno' in Precos)\n","del Precos['borracha']\n","print(Precos)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["{'lapis': 5.5, 'borracha': 7.0, 'caneta': 6.5}\n","O preço da borracha eh: 7.0\n","dict_keys(['lapis', 'borracha', 'caneta'])\n","dict_values([5.5, 7.0, 6.5])\n","True\n","False\n","{'lapis': 5.5, 'caneta': 6.5}\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"1S7IfLXUTrH6","colab_type":"code","colab":{}},"source":[""],"execution_count":null,"outputs":[]}]}